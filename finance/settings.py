"""
Django settings for finance project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from .local_settings import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'kshjvh0(mz&##&m$ev8-n=!t*!9j%_c*2ha=%g$%mok$h&ehio'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'accounts.apps.AccountsConfig',
    'main_app.apps.MainAppConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_registration',
    'django_summernote',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'finance.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main_app.context_processors.get_categories',
            ],
        },
    },
]

WSGI_APPLICATION = 'finance.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        'HOST': 'db',
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_DIR = os.path.join(BASE_DIR, 'static')
MEDIA_DIR = os.path.join(BASE_DIR, 'finance/media')

LOGIN_REDIRECT_URL = '/'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

STATICFILES_DIRS = [STATIC_DIR,]
MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = '/media/'

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.mail.ru'
EMAIL_HOST_USER = email['user']
EMAIL_HOST_PASSWORD = email['password']
EMAIL_PORT = 587

# Registration users

ACCOUNT_ACTIVATION_DAYS = 7

SUMMERNOTE_THEME = 'bs4'  # Show summernote with Bootstrap4

# SUMMERNOTE_CONFIG = {
#     # Using SummernoteWidget - iframe mode, default
#     'iframe': True,
#
#     # Or, you can set it as False to use SummernoteInplaceWidget by default - no iframe mode
#     # In this case, you have to load Bootstrap/jQuery stuff by manually.
#     # Use this when you're already using Bootstraip/jQuery based themes.
#     'iframe': False,
#
#     # You can put custom Summernote settings
#     'summernote': {
#         # As an example, using Summernote Air-mode
#         'airMode': False,
#
#         # Change editor size
#         'width': '100%',
#         'height': '480',
#
#         # Use proper language setting automatically (default)
#         'lang': None,
#
#         # Or, set editor language/locale forcely
#         'lang': 'ko-KR',
#
#         # You can also add custom settings for external plugins
#         'print': {
#             'stylesheetUrl': '/main_app/static/printable.css',
#         },
#     },
#
#     # Need authentication while uploading attachments.
#     'attachment_require_authentication': True,
#
#     # Set `upload_to` function for attachments.
#     'attachment_upload_to': '',
#
#     # Set custom storage class for attachments.
#     'attachment_storage_class': 'my.custom.storage.class.name',
#
#     # Set custom model for attachments (default: 'django_summernote.Attachment')
#     'attachment_model': 'my.custom.attachment.model',  # must inherit 'django_summernote.AbstractAttachment'
#
#     # You can disable attachment feature.
#     'disable_attachment': False,
#
#     # Set `True` to return attachment paths in absolute URIs.
#     'attachment_absolute_uri': False,
#
#     # You can add custom css/js for SummernoteWidget.
#     'css': (
#     ),
#     'js': (
#     ),
#
#     # You can also add custom css/js for SummernoteInplaceWidget.
#     # !!! Be sure to put {{ form.media }} in template before initiate summernote.
#     'css_for_inplace': (
#     ),
#     'js_for_inplace': (
#     ),
#
#     # Codemirror as codeview
#     # If any codemirror settings are defined, it will include codemirror files automatically.
#     'css': (
#         '//cdnjs.cloudflare.com/ajax/libs/codemirror/5.29.0/theme/monokai.min.css',
#     ),
#     'codemirror': {
#         'mode': 'htmlmixed',
#         'lineNumbers': 'true',
#
#         # You have to include theme file in 'css' or 'css_for_inplace' before using it.
#         'theme': 'monokai',
#     },
#
#     # Lazy initialize
#     # If you want to initialize summernote at the bottom of page, set this as True
#     # and call `initSummernote()` on your page.
#     'lazy': True,
#
#     # To use external plugins,
#     # Include them within `css` and `js`.
#     'js': {
#         '/some_static_folder/summernote-ext-print.js',
#         '//somewhere_in_internet/summernote-plugin-name.js',
#     },
# }